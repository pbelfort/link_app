// Mocks generated by Mockito 5.4.6 from annotations
// in link_app/test/providers/provider_alias_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:link_app/domain/entities/alias_entity.dart' as _i2;
import 'package:link_app/domain/usecases/create_alias_usecase.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAliasEntity_0 extends _i1.SmartFake implements _i2.AliasEntity {
  _FakeAliasEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [CreateAliasUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateAliasUseCase extends _i1.Mock
    implements _i3.CreateAliasUseCase {
  @override
  _i4.Future<_i2.AliasEntity> call(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#call, [url]),
            returnValue: _i4.Future<_i2.AliasEntity>.value(
              _FakeAliasEntity_0(this, Invocation.method(#call, [url])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.AliasEntity>.value(
              _FakeAliasEntity_0(this, Invocation.method(#call, [url])),
            ),
          )
          as _i4.Future<_i2.AliasEntity>);
}
